swagger: "2.4.15"
info:
  title: Task Managment API
  description: API to create, delete end edit Tasks.
  version: 1.0.0
host: localhost
basePath: /
schemes:
  - http
consumes:
  - "application/json"
produces:
  - "application/json"

paths:
  /:
    get:
      operationId: get
      summary: Api worked.
      responses:
        200:
          description: Api worked good.

  /board:
    get:
      operationId: getBoardById
      summary: Getted Board by it Id.
      parameters:
        - in: path
          name: boardId
          required: true
          type: integer
          minimum: 1
          description: The ID of the Board to return.
      produces:
        - application/json
      responses:
        200:
          description: Getted Board.
          schema:
            $ref: '#/definitions/Board'
    post:
      operationId: createBoard
      summary: Creates a new board.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: board
          required: true
          description: The board to create.
          schema:
            $ref: '#/definitions/Board'
      responses:
        201:
          description: Created.
          schema:
            $ref: '#/definitions/Board'
    delete:
      operationId: deleteBoard
      summary: Delete board.
      consumes:
        - application/json
      parameters:
        - in: body
          name: board
          required: true
          description: The board to delete.
          schema:
            $ref: '#/definitions/Board'
      responses:
        200:
          description: Deleted.
    put:
      operationId: editBoard
      summary: Edit board.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: board
          required: true
          description: The board with changes.
          schema:
            $ref: '#/definitions/Board'
      responses:
        200:
          description: Edited.
          schema:
            $ref: '#/definitions/Board'

  /boards:
    get:
      operationId: getAllBoards
      summary: Get list of boards.
      produces:
        - application/json
      responses:
        200:
          description: A list of Boards.
          schema:
            type: array
            items:
              $ref: '#/definitions/Board'

  /column:
    get:
      operationId: getColumnById
      summary: Getted Column by it Id.
      produces:
        - application/json
      parameters:
        - in: path
          name: columnId
          required: true
          type: integer
          minimum: 1
          description: The ID of the Column to return.
      responses:
        200:
          description: Getted Column.
          schema:
            $ref: '#/definitions/Column'
    post:
      operationId: createColumn
      summary: Creates a new column.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: column
          required: true
          description: The column to create.
          schema:
            $ref: '#/definitions/Column'
      responses:
        201:
          description: Created.
          schema:
            $ref: '#/definitions/Column'
    delete:
      operationId: deleteColumn
      summary: Delete column.
      consumes:
        - application/json
      parameters:
        - in: body
          name: column
          required: true
          description: The column to delete.
          schema:
            $ref: '#/definitions/Column'
      responses:
        200:
          description: Deleted
    put:
      operationId: editColumn
      summary: Edit column.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: column
          required: true
          description: The column with changes.
          schema:
            $ref: '#/definitions/Column'
      responses:
        200:
          description: Edited.
          schema:
            $ref: '#/definitions/Column'

  /columns:
    get:
      operationId: getAllColumns
      summary: Get list of columns.
      produces:
        - application/json
      responses:
        200:
          description: A list of Columns.
          schema:
            type: array
            items:
              $ref: '#/definitions/Column'

  /task:
    get:
      operationId: getTaskById
      summary: Getted Task by it Id.
      parameters:
        - in: path
          name: taskId
          required: true
          type: integer
          minimum: 1
          description: The ID of the Task to return.
      responses:
        200:
          description: Getted Task.
          schema:
            $ref: '#/definitions/Task'
    post:
      operationId: createTask
      summary: Creates a new task.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          required: true
          description: The task to create.
          schema:
            $ref: '#/definitions/Task'
      responses:
        201:
          description: Created.
          schema:
            $ref: '#/definitions/Task'
    delete:
      operationId: deleteTask
      summary: Delete task.
      consumes:
        - application/json
      parameters:
        - in: body
          name: task
          required: true
          description: The task to delete.
          schema:
            $ref: '#/definitions/Task'
      responses:
        200:
          description: Deleted.
    put:
      operationId: editTask
      summary: Edit task.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          required: true
          description: The task with changes.
          schema:
            $ref: '#/definitions/Task'
      responses:
        200:
          description: Edited.
          schema:
            $ref: '#/definitions/Task'
    patch:
      operationId: moveTaskToColumn
      summary: move Task to Column with id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: taskId
          required: true
          description: Id of tsk to move.
          type: integer
        - in: query
          name: columnId
          required: true
          description: Id of column to move.
          type: integer
      responses:
        200:
          description: Moved.

  /tasks:
    get:
      operationId: getAllTask
      summary: Get list of tasks.
      produces:
        - application/json
      responses:
        200:
          description: A list of Tasks.
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'

definitions:
  Board:
    type: object
    required:
      - boardId
    properties:
      boardId:
        type: integer
      name:
        type: string

  Column:
    type: object
    required:
      - columnId
    properties:
      columnId:
        type: integer
      name:
        type: string
      board:
        schema:
          $ref: '#/definitions/Board'

  Task:
    type: object
    required:
      - taskId
    properties:
      taskId:
        type: integer
      header:
        type: string
      text:
        type: string
      column:
        schema:
          $ref: '#/definitions/Column'